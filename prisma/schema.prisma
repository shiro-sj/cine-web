// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id                Int               @id @default(autoincrement())
  username          String
  clerkId           String            @unique
  email             String            @unique
  watchHistory      WatchHistory[]
  friends           Friend[]          @relation("Friends_user")
  friendOf          Friend[]          @relation("Friends_friend")
}

model WatchHistory {
  id        Int      @id @default(autoincrement())
  title     String
  watchedAt DateTime
  isTvShow  Boolean
  tmdbID    String

  runtime Int
  episodeName String?
  season  String?

  genres    String[]
  posterPath String
  releaseDate DateTime
  
  isUploaded Boolean  @default(false)
  uploadDate DateTime

  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model Friend {
  id         Int    @id @default(autoincrement())
  username   String
  friendname String
  userId     Int   
  friendId   Int    
  user       User   @relation("Friends_user", fields: [userId], references: [id], onDelete: Cascade)
  friend     User   @relation("Friends_friend", fields: [friendId], references: [id], onDelete: Cascade)
}

model FriendRequests {
    id                 Int      @id @default(autoincrement())
    senderUserName    String
    receiverUserName  String
    createdAt         DateTime @default(now())
}


